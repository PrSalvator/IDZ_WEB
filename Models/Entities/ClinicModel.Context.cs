//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IDZ.Models.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<APPOINTMENT> APPOINTMENT { get; set; }
        public virtual DbSet<APPOINTMENT_PARAMETR> APPOINTMENT_PARAMETR { get; set; }
        public virtual DbSet<DOCTOR> DOCTOR { get; set; }
        public virtual DbSet<DOCTOR_SPECIALITY> DOCTOR_SPECIALITY { get; set; }
        public virtual DbSet<PATIENT> PATIENT { get; set; }
        public virtual DbSet<PROCEDURE> PROCEDURE { get; set; }
        public virtual DbSet<RECEPTION_HOURS> RECEPTION_HOURS { get; set; }
        public virtual DbSet<REFERRAL> REFERRAL { get; set; }
        public virtual DbSet<REPORT> REPORT { get; set; }
        public virtual DbSet<SPECIALITY> SPECIALITY { get; set; }
        public virtual DbSet<APPOINTMENT_INFO> APPOINTMENT_INFO { get; set; }
        public virtual DbSet<DOCTOR_RECEPTION_HOURS> DOCTOR_RECEPTION_HOURS { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<ROLE> ROLE { get; set; }
        public virtual DbSet<USER> USER { get; set; }
    
        public virtual int ADD_DOCTOR_SPECIALITY(string lAST_NAME, string fIRST_NAME, string pATRONYMIC, string sPECIALITY_NAME)
        {
            var lAST_NAMEParameter = lAST_NAME != null ?
                new ObjectParameter("LAST_NAME", lAST_NAME) :
                new ObjectParameter("LAST_NAME", typeof(string));
    
            var fIRST_NAMEParameter = fIRST_NAME != null ?
                new ObjectParameter("FIRST_NAME", fIRST_NAME) :
                new ObjectParameter("FIRST_NAME", typeof(string));
    
            var pATRONYMICParameter = pATRONYMIC != null ?
                new ObjectParameter("PATRONYMIC", pATRONYMIC) :
                new ObjectParameter("PATRONYMIC", typeof(string));
    
            var sPECIALITY_NAMEParameter = sPECIALITY_NAME != null ?
                new ObjectParameter("SPECIALITY_NAME", sPECIALITY_NAME) :
                new ObjectParameter("SPECIALITY_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_DOCTOR_SPECIALITY", lAST_NAMEParameter, fIRST_NAMEParameter, pATRONYMICParameter, sPECIALITY_NAMEParameter);
        }
    }
}
